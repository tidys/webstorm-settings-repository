<templateSet group="user">
  <template name="myindex" value="const Fs = require(&quot;fire-fs&quot;);&#10;const Path = require(&quot;fire-path&quot;);&#10;let Core = Editor.require(&quot;packages://avg-editor/core/core.js&quot;);&#10;Editor.Panel.extend({&#10;    style: Core.loadFile('panel-$dir$/index.css'),&#10;    template: Core.loadFile('panel-$dir$/index.html'),&#10;&#10;    ready() {&#10;        this.plugin = new window.Vue({&#10;            el: this.shadowRoot,&#10;            created() {&#10;                console.log(&quot;created&quot;);&#10;            },&#10;            data: {},&#10;            methods: {},&#10;&#10;        })&#10;    },&#10;&#10;    messages: {}&#10;});&#10;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="dir" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="paneljson" value="&quot;panel.$dir$&quot;:{&#10;    &quot;main&quot;:&quot;panel-$dir$/index.js&quot;,&#10;    &quot;type&quot;:&quot;dockable&quot;,&#10;    &quot;title&quot;:&quot;$title$&quot;&#10;}," description="" toReformat="false" toShortenFQNames="true">
    <variable name="dir" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="title" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JSON" value="true" />
    </context>
  </template>
  <template name="mycomp" value="const Path = require( &quot;path&quot; );&#10;const Fs = require( &quot;fs&quot; );&#10;Vue.component( '$comp$', {&#10;    template: Fs.readFileSync( Path.join( __dirname, 'index.html' ), 'utf-8' ),&#10;    props: ['data'],&#10;    created () {&#10;    },&#10;    data () {&#10;        return {};&#10;    },&#10;    methods: {}&#10;} );&#10;" description="" toReformat="false" toShortenFQNames="true">
    <variable name="comp" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
</templateSet>